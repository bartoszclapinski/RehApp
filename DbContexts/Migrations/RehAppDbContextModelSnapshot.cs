// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.DbContexts;

#nullable disable

namespace server.DbContexts.Migrations
{
    [DbContext(typeof(RehAppDbContext))]
    partial class RehAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("server.Entities.Personal.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("server.Entities.Personal.Therapist", b =>
                {
                    b.Property<int>("TherapistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TherapistId"), 1L, 1);

                    b.Property<int>("PersonalDetailsPersonId")
                        .HasColumnType("int");

                    b.HasKey("TherapistId");

                    b.HasIndex("PersonalDetailsPersonId");

                    b.ToTable("Therapists");
                });

            modelBuilder.Entity("server.Entities.Personal.Therapist", b =>
                {
                    b.HasOne("server.Entities.Personal.Person", "PersonalDetails")
                        .WithMany("Therapists")
                        .HasForeignKey("PersonalDetailsPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalDetails");
                });

            modelBuilder.Entity("server.Entities.Personal.Person", b =>
                {
                    b.Navigation("Therapists");
                });
#pragma warning restore 612, 618
        }
    }
}
